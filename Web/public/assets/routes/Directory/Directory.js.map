{"version":3,"sources":["webpack:///./src/shared/routes/Directory/components/directoryNode.js","webpack:///./src/shared/routes/Directory/Directory.js"],"names":["_react","_interopRequireWildcard","__webpack_require__","_styledComponents","_theme","_reactRouterDom","DirectoryNode","_this","_classCallCheck","this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","open","Component","name","arguments","length","undefined","node","_typeof","_this2","default","createElement","className","props","entries","map","e","isNodeQuestion","Link","key","to","displayName","onClick","setState","style","color","primaryColor","textColor","green","_interopRequireDefault","_directoryNode","Directory","directory","fetch","then","res","json","console","log","padding"],"mappings":"4JAAA,MAAAA,ySAAAC,CAAAC,EAAA,IACAC,KAAAD,EAAA,iCACAE,EAAAF,EAAA,IAEAG,EAAAH,EAAA,6kCAEMI,cACJ,SAAAA,IAAc,IAAAC,EAAA,mGAAAC,CAAAC,KAAAH,IACZC,EAAAG,EAAAD,MAAAH,EAAAK,WAAAC,OAAAC,eAAAP,IAAAQ,KAAAL,QACKM,OACHC,MAAM,GAHIT,gUADYU,sDAQPC,GACjB,QAD0CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAGnC,KAAOD,EAFU,MAAQA,yCAKZI,GACpB,MAA0B,WAAnBC,EAAOD,EAAK,0CAGZ,IAAAE,EAAAf,KACP,OACET,EAAAyB,QAAAC,cAAA,OAAKC,UAAWlB,KAAKmB,MAAMD,WACxBf,OAAOiB,QAAQpB,KAAKmB,MAAMN,MAAMQ,IAC/B,SAAAC,GAAA,OACEzB,EAAc0B,eAAeD,GAC3B/B,EAAAyB,QAAAC,cAACrB,EAAA4B,MAAKC,IAAKH,EAAE,GAAIJ,UAAU,eAAeQ,GAAI,MAAQJ,EAAE,IACrDzB,EAAc8B,YAAYL,EAAE,IAAI,IAGnC/B,EAAAyB,QAAAC,cAAA,OAAKQ,IAAKH,EAAE,IACV/B,EAAAyB,QAAAC,cAAA,OACEW,QAAS,kBAAMb,EAAKc,UAAWtB,MAAOQ,EAAKT,MAAMC,QACjDW,UAAU,gBACVY,OACEC,MAAOhB,EAAKT,MAAMC,KAAOyB,eAAeC,cAGzCpC,EAAc8B,YAAYL,EAAE,IAAI,IAElCP,EAAKT,MAAMC,MACVhB,EAAAyB,QAAAC,cAAA,OAAKC,UAAU,aACb3B,EAAAyB,QAAAC,cAACpB,GAAcgB,KAAMS,EAAE,kDAW5B,EAAA5B,EAAAsB,SAAOnB,EAAP,GAYFqC,QAIAF,eAIWA,+HC7ExB,IAAAzC,ySAAAC,CAAAC,EAAA,IACAC,EAAAyC,EAAA1C,EAAA,KAEA2C,EAAAD,EAAA1C,EAAA,MACAE,EAAAF,EAAA,i2BAEM4C,cACJ,SAAAA,IAAc,IAAAvC,EAAA,mGAAAC,CAAAC,KAAAqC,IACZvC,EAAAG,EAAAD,MAAAqC,EAAAnC,WAAAC,OAAAC,eAAAiC,IAAAhC,KAAAL,QACKM,OACHgC,cAHUxC,gUADQU,+DAQF,IAAAO,EAAAf,KAClBuC,MAAM,WAAWC,KAAK,SAAAC,GAAA,OAAOA,EAAIC,SAAQF,KAAK,SAAAC,GAC5CE,QAAQC,IAAIH,GACZ1B,EAAKc,UACHS,UAAWG,uCAMf,OACElD,EAAAyB,QAAAC,cAAA,OAAKC,UAAWlB,KAAKmB,MAAMD,WACzB3B,EAAAyB,QAAAC,cAAA,2BACA1B,EAAAyB,QAAAC,cAAA,OAAKa,OACHe,QAAS,SAETtD,EAAAyB,QAAAC,cAACmB,EAAApB,SAAcH,KAAMb,KAAKM,MAAMgC,sDAO3B,EAAA5C,EAAAsB,SAAOqB,EAAP,GACJJ","file":"routes/Directory/Directory.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { primaryColor, textColor, green } from \"../../../theme/theme\";\n\nimport { Link } from \"react-router-dom\";\n\nclass DirectoryNode extends Component {\n  constructor() {\n    super();\n    this.state = {\n      open: false\n    };\n  }\n\n  static displayName(name, isQuestion = true) {\n    if (!isQuestion) return \"ðŸ“¦ \" + name;\n    // if (completed) return \"âœ… \" + name; // only uncomment this if completed support is eventually added\n    return \"  \" + name;\n  }\n\n  static isNodeQuestion(node) {\n    return typeof node[1] !== 'object'\n  }\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        {Object.entries(this.props.node).map(\n          e =>\n            DirectoryNode.isNodeQuestion(e) ? (\n              <Link key={e[0]} className=\"linkQuestion\" to={\"/a/\" + e[0]}>\n                {DirectoryNode.displayName(e[1], true)}\n              </Link>\n            ) : (\n              <div key={e[0]}>\n                <div\n                  onClick={() => this.setState({ open: !this.state.open })}\n                  className=\"linkDirectory\"\n                  style={{\n                    color: this.state.open ? primaryColor : textColor\n                  }}\n                >\n                  {DirectoryNode.displayName(e[0], false)}\n                </div>\n                {this.state.open && (\n                  <div className=\"directory\">\n                    <DirectoryNode node={e[1]} />\n                  </div>\n                )}\n              </div>\n            )\n        )}\n      </div>\n    );\n  }\n}\n\nexport default styled(DirectoryNode)`\n  .linkQuestion {\n    cursor: pointer;\n    display: block;\n  }\n  \n  .linkDirectory {\n    cursor: s-resize;\n    display: block;\n  }\n  \n  .linkQuestion:hover {\n    color: ${green} !important;\n  }\n  \n  .linkDirectory:hover {\n    color: ${primaryColor} !important;\n  }\n  \n  .directory {\n    border: 1px solid ${primaryColor};\n    border-radius: 5px;\n    margin-bottom: 2%\n    padding: 1%;\n  }\n`;\n","import React, { Component } from 'react';\nimport styled from 'styled-components'\n\nimport DirectoryNode from './components/directoryNode'\nimport { textColor } from '../../theme/theme'\n\nclass Directory extends Component {\n  constructor() {\n    super();\n    this.state = {\n      directory: {}\n    }\n  }\n\n  componentDidMount() {\n    fetch('/api/r/').then(res => res.json()).then(res => {\n      console.log(res)\n      this.setState({\n        directory: res\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        <h1>PraticeLit ðŸ”¥</h1>\n        <div style={{\n          padding: '0 7%'\n        }}>\n          <DirectoryNode node={this.state.directory}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default styled(Directory)`\n  color: ${textColor};\n  font-size: 22px;\n  font-weight: 100;\n  \n  h1 {\n    margin-left: 15px;\n  }\n`\n"],"sourceRoot":""}